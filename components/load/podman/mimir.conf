ServerName ${MIMIR_HTTPD_SERVER_NAME}:80

ExtFilterDefine decrypt mode=output \
      cmd="/usr/bin/openssl enc -aes-256-cbc -pbkdf2 -d -pass pass:${ACCESS_KEY}"

ExtFilterDefine gunzip mode=output cmd="/usr/bin/gunzip -c"

Define "compressed_${COMPRESSED}_encrypt_${ENCRYPT}"

# This is needed for proxy rewrite rules over HTTPS, e.g. the plc api urls
SSLProxyEngine on

<Directory "/var/www/html">
  Options -Indexes +Includes
  ErrorDocument 404 /404.html
  AddOutputFilter INCLUDES .html
  Header set x-mimir-ssi "true"
</Directory>

# Are we serving uncompressed unencrypted content?
<IfDefine "compressed_false_encrypt_false">
  <Directory "/var/www/html">
    # deflate everything
    AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css text/javascript application/x-javascript application/javascript
    Header set x-mimir-compressed "false"
    Header set x-mimir-encrypted "false"
  </Directory>
</IfDefine>

# Are we serving compressed unencrypted content?
<IfDefine "compressed_true_encrypt_false">
  <Directory "/var/www/html">
    # deflate everything except text/html because it's pre-compressed
    AddOutputFilterByType DEFLATE text/plain text/xml text/css text/javascript application/x-javascript application/javascript
    Header set x-mimir-encrypted "false"
  </Directory>
  <FilesMatch ".+\.(html)$">
    SetOutputFilter gunzip;INCLUDES;DEFLATE
    Header set x-mimir-compressed "true"
    Header set x-mimir-html "true"
  </FilesMatch>
</IfDefine>

# Are we serving uncompressed encrypted content?
<IfDefine "compressed_false_encrypt_true">
  <Directory "/var/www/html">
    # deflate everything
    AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css text/javascript application/x-javascript application/javascript
    Header set x-mimir-compressed "false"
  </Directory>
  <LocationMatch "/(solutions|articles)/">
      # decrypt kbase content, process SSI includes, and deflate
      SetOutputFilter decrypt;INCLUDES;DEFLATE
      Header set x-mimir-encrypted "true"
  </LocationMatch>
</IfDefine>

# Are we serving compressed & encrypted content?
<IfDefine "compressed_true_encrypt_true">
  <Directory "/var/www/html">
    # deflate everything except text/html because it's pre-compressed
    AddOutputFilterByType DEFLATE text/plain text/xml text/css text/javascript application/x-javascript application/javascript
  </Directory>
  <FilesMatch ".+\.(html)$">
    SetOutputFilter gunzip;INCLUDES;DEFLATE
    Header set x-mimir-compressed "true"
    Header set x-mimir-html "true"
  </FilesMatch>
  <LocationMatch "/(solutions|articles)/">
      # decrypt kbase content, process SSI includes, and deflate
      SetOutputFilter decrypt;gunzip;INCLUDES;DEFLATE
      Header set x-mimir-encrypted "true"
  </LocationMatch>
</IfDefine>

<Location "/solr/portal/select">
  ProxyPass "http://127.0.0.1:8983/solr/portal/select"
  ProxyPassReverse "http://127.0.0.1:8983/solr/portal/select"
</Location>

<Location "/solr/portal/select-errata">
  ProxyPass "http://127.0.0.1:8983/solr/portal/select-errata"
  ProxyPassReverse "http://127.0.0.1:8983/solr/portal/select-errata"
</Location>

<Location "/solr/portal/browse">
  ProxyPass "http://127.0.0.1:8983/solr/portal/browse"
  ProxyPassReverse "http://127.0.0.1:8983/solr/portal/browse"
</Location>

# RewriteMap for url encoded product names to static json files for the Product Life Cycle API
# example: https://access.redhat.com/product-life-cycles/api/v1/products?name=Openshift%20Container%20Platform%204
RewriteMap lower int:tolower
RewriteMap pmap txt:/var/www/html/pmap.txt

# URL rewrites for Product Life Cycles API URLs
<Location "/product-life-cycles/api/v1/products/">
  # rewrite /product-life-cycles/api/v1/products?name=Red%20Hat%20Enterprise%20Linux
  # to /product-life-cycles/api/v1/products/Red%20Hat%20Enterprise%20Linux
  # do not redirect with a 301, just rewrite the URL
  RewriteEngine On
  RewriteCond %{QUERY_STRING} ^name=(.*)$
  RewriteRule ^(.*)/$ /product-life-cycles/api/v1/products/${pmap:${lower:%1}} [PT]
</Location>

# Set the directory index to index.json for PLC api
# this is so both both URLs below can return content json content:
#  1. /product-life-cycles/api/v1/products/
#  2. /product-life-cycles/api/v1/products/?name=Red%20Hat%20Enterprise%20Linux
<Directory "/var/www/html/product-life-cycles/api/v1/products">
  DirectoryIndex index.json
</Directory>

<Location "/hydra/rest/securitydata">
  # Rewrite rule to proxy the `page=` query string prameter of the security data api to directory paths
  RewriteEngine On
  RewriteCond %{QUERY_STRING} ^page=(\d+)$
  RewriteRule ^.*csaf\.json$ /hydra/rest/securitydata/csaf/%1/ [P,QSD,L]

  RewriteCond %{QUERY_STRING} ^page=(\d+)$
  RewriteRule ^.*cve\.json$ /hydra/rest/securitydata/cve/%1/ [P,QSD,L]
</Location>

# Set the directory index to index.json for /hydra/rest/securitydata api
#  This is so apache returns the correct content type for the index page application/json
<Directory "/var/www/html/hydra/rest/securitydata">
  DirectoryIndex index.json
</Directory>
