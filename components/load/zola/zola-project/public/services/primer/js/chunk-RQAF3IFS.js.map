{
  "version": 3,
  "sources": ["../../../../node_modules/@patternfly/pfe-avatar/_temp/djb-hash.js", "../../../../node_modules/@patternfly/pfe-avatar/_temp/hslrgb.js", "../../../../node_modules/@patternfly/pfe-avatar/_temp/pfe-avatar.js"],
  "sourcesContent": ["/**\n * djb2 string hashing function.\n *\n * @see http://www.cse.yorku.ca/~oz/hash.html\n * @param {String} str the string to hash.\n * @return {Number} a positive integer\n */\n\nfunction hash(str) {\n  let hash = 5381;\n  let i = str.length;\n\n  while (i) {\n    hash = (hash * 33) ^ str.charCodeAt(--i);\n  }\n\n  return hash >>> 0;\n}\n\nexport { hash };\n", "function h2rgb(v1, v2, vH) {\n  if (vH < 0) vH += 1;\n  if (vH > 1) vH -= 1;\n  if (6 * vH < 1) return v1 + (v2 - v1) * 6 * vH;\n  if (2 * vH < 1) return v2;\n  if (3 * vH < 2) return v1 + (v2 - v1) * (2 / 3 - vH) * 6;\n  return v1;\n}\n\n/**\n * Convert an HSL color to RGB.\n *\n * @param {Number} H the hue component\n * @param {Number} S the saturation component\n * @param {Number} L the luminance component\n * @return {Array} [R, G, B]\n *\n * @see https://www.easyrgb.com/en/math.php\n */\nexport function hsl2rgb(_H, _S, _L) {\n  let R, G, B;\n\n  const H = Math.max(0, Math.min(1, _H));\n  const S = Math.max(0, Math.min(1, _S));\n  const L = Math.max(0, Math.min(1, _L));\n\n  if (S == 0) {\n    R = L * 255;\n    G = L * 255;\n    B = L * 255;\n  } else {\n    let a, b;\n\n    if (L < 0.5) {\n      b = L * (1 + S);\n    } else {\n      b = L + S - S * L;\n    }\n\n    a = 2 * L - b;\n\n    R = Math.floor(255 * h2rgb(a, b, H + 1 / 3));\n    G = Math.floor(255 * h2rgb(a, b, H));\n    B = Math.floor(255 * h2rgb(a, b, H - 1 / 3));\n  }\n\n  return [R, G, B];\n}\n\n/**\n * Convert an RGBcolor to HSL.\n *\n * @param {Number} R the red component\n * @param {Number} G the green component\n * @param {Number} B the blue component\n * @return {Array} [H, S, L]\n *\n * @see https://www.easyrgb.com/en/math.php\n */\nexport function rgb2hsl(_R, _G, _B) {\n  let H, S, L;\n\n  const R = Math.max(0, Math.min(255, _R));\n  const G = Math.max(0, Math.min(255, _G));\n  const B = Math.max(0, Math.min(255, _B));\n\n  const r = R / 255;\n  const g = G / 255;\n  const b = B / 255;\n\n  const var_min = Math.min(Math.min(r, g), b);\n  const var_max = Math.max(Math.max(r, g), b);\n  const del_max = var_max - var_min;\n\n  L = (var_max + var_min) / 2;\n\n  if (del_max === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = del_max / (var_max + var_min);\n    } else {\n      S = del_max / (2 - var_max - var_min);\n    }\n\n    const del_r = ((var_max - r) / 6 + del_max / 2) / del_max;\n    const del_g = ((var_max - g) / 6 + del_max / 2) / del_max;\n    const del_b = ((var_max - b) / 6 + del_max / 2) / del_max;\n\n    if (r == var_max) {\n      H = del_b - del_g;\n    } else if (g == var_max) {\n      H = 1 / 3 + del_r - del_b;\n    } else if (b == var_max) {\n      H = 2 / 3 + del_g - del_r;\n    }\n\n    if (H < 0) {\n      H += 1;\n    } else if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  return [H, S, L];\n}\n", "/*!\n * PatternFly Elements: PfeAvatar 1.12.2\n * @license\n * Copyright 2021 Red Hat, Inc.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n*/\n\nimport PFElement from \"../../pfelement/dist/pfelement.js\";\nimport { hash } from \"./djb-hash.js\";\nimport { hsl2rgb, rgb2hsl } from \"./hslrgb.js\";\n\nclass PfeAvatar extends PFElement {\n\n  // Injected at build-time\n  static get version() {\n    return \"1.12.2\";\n  }\n\n  // Injected at build-time\n  get html() {\n    return `\n<style>:host{display:block;position:relative;width:128px;width:var(--pfe-avatar--size,var(--pfe-avatar--width,128px));height:128px;height:var(--pfe-avatar--size,var(--pfe-avatar--width,128px))}:host canvas{width:100%;height:100%;image-rendering:optimizeSpeed;image-rendering:-moz-crisp-edges;image-rendering:-webkit-optimize-contrast;image-rendering:-o-crisp-edges;image-rendering:-o-pixelated;image-rendering:pixelated;-ms-interpolation-mode:nearest-neighbor}:host([shape=rounded]) canvas,:host([shape=rounded]) img{border-radius:calc(128px / 8 + 1px);border-radius:calc(var(--pfe-avatar--size,var(--pfe-avatar--width,128px))/ 8 + 1px)}:host([shape=circle]) canvas,:host([shape=circle]) img{border-radius:50%}:host([src]) canvas{display:none}:host([src]) img{display:block;width:100%;height:100%;-o-object-fit:cover;object-fit:cover}:host(:not([src])) img{display:none}:host([hidden]){display:none} /*# sourceMappingURL=pfe-avatar.min.css.map */</style>\n<canvas></canvas>\n<img>`;\n  }\n\n  static get tag() {\n    return \"pfe-avatar\";\n  }\n\n  static get properties() {\n    return {\n      name: {\n        title: \"Username\",\n        type: String,\n        default: \"\",\n        observer: \"_updateWhenConnected\",\n      },\n      src: {\n        title: \"Avatar image URL\",\n        type: String,\n        observer: \"_updateWhenConnected\",\n      },\n      pattern: {\n        title: \"Shape pattern\",\n        type: String,\n        default: PfeAvatar.patterns.squares,\n        observer: \"_updateWhenConnected\",\n      },\n      // @TODO Deprecated pfe-name in 1.0\n      oldName: {\n        alias: \"name\",\n        attr: \"pfe-name\",\n      },\n      // @TODO Deprecated pfe-src in 1.0\n      oldSrc: {\n        alias: \"src\",\n        attr: \"pfe-src\",\n      },\n      // @TODO Deprecated pfe-pattern in 1.0\n      oldPattern: {\n        alias: \"pattern\",\n        attr: \"pfe-pattern\",\n      },\n    };\n  }\n\n  get templateUrl() {\n    return \"pfe-avatar.html\";\n  }\n\n  get styleUrl() {\n    return \"pfe-avatar.scss\";\n  }\n\n  static get events() {\n    return {\n      connected: `${this.tag}:connected`,\n    };\n  }\n\n  static get patterns() {\n    return {\n      triangles: \"triangles\",\n      squares: \"squares\",\n    };\n  }\n\n  static get defaultSize() {\n    return 128;\n  }\n\n  static get defaultColors() {\n    return \"#67accf #448087 #709c6b #a35252 #826cbb\";\n  }\n\n  get customColors() {\n    return this.cssVariable(\"pfe-avatar--colors\");\n  }\n\n  constructor() {\n    super(PfeAvatar);\n\n    this._initCanvas = this._initCanvas.bind(this);\n  }\n\n  connectedCallback() {\n    // initCanvas comes before parent's connectedCallback because the\n    // connectedCallback sets attribute values, triggering, the observer\n    // functions, which require the canvas to already be initialized.\n    this._initCanvas();\n\n    super.connectedCallback();\n\n    this.emitEvent(PfeAvatar.events.connected, {\n      bubbles: false,\n    });\n  }\n\n  _initCanvas() {\n    this._canvas = this.shadowRoot.querySelector(\"canvas\");\n    const cssVarWidth = this.cssVariable(\"pfe-avatar--width\");\n    const size = (cssVarWidth && cssVarWidth.replace(/px$/, \"\")) || PfeAvatar.defaultSize;\n    this._canvas.width = size;\n    this._canvas.height = size;\n\n    this._squareSize = this._canvas.width / 8;\n    this._triangleSize = this._canvas.width / 4;\n\n    this._ctx = this._canvas.getContext(\"2d\");\n  }\n\n  static _registerColors() {\n    this.colors = [];\n    const contextColors = this.customColors || this.defaultColors;\n\n    contextColors.split(/\\s+/).forEach((colorCode) => {\n      let pattern;\n      switch (colorCode.length) {\n        case 4: // ex: \"#0fc\"\n          pattern = /^#([A-f0-9])([A-f0-9])([A-f0-9])$/.exec(colorCode);\n          if (pattern) {\n            pattern.shift();\n            const color = pattern.map((c) => parseInt(c + c, 16));\n            this._registerColor(color);\n          } else {\n            this.log(`[pfe-avatar] invalid color ${colorCode}`);\n          }\n          break;\n        case 7: // ex: \"#00ffcc\"\n          pattern = /^#([A-f0-9]{2})([A-f0-9]{2})([A-f0-9]{2})$/.exec(colorCode);\n          if (pattern) {\n            pattern.shift();\n            const color = pattern.map((c) => parseInt(c, 16));\n            this._registerColor(color);\n          } else {\n            this.log(`[pfe-avatar] invalid color ${colorCode}`);\n          }\n      }\n    });\n\n    return this.colors;\n  }\n\n  static _registerColor(color) {\n    PfeAvatar.colors.push({\n      color1: `rgb(${color.join(\",\")})`,\n      color2: `rgb(${this._adjustColor(color).join(\",\")})`,\n    });\n  }\n\n  static _adjustColor(color) {\n    const dark = 0.1;\n    const l_adj = 0.1; // luminance adjustment\n    const hsl = rgb2hsl(...color);\n\n    // if luminance is too dark already, then lighten the alternate color\n    // instead of darkening it.\n    hsl[2] += hsl[2] > dark ? -l_adj : l_adj;\n\n    return hsl2rgb(...hsl);\n  }\n\n  _updateWhenConnected() {\n    if (this.hasAttribute(\"pfelement\")) {\n      this.update();\n    } else {\n      this.addEventListener(PfeAvatar.events.connected, () => this.update());\n    }\n  }\n\n  update() {\n    // if we have a src element, update the img, otherwise update the random pattern\n    if (this.src) {\n      this.shadowRoot.querySelector(\"img\").src = this.src;\n    } else {\n      const bitPattern = hash(this.name).toString(2);\n      const arrPattern = bitPattern.split(\"\").map((n) => Number(n));\n      this._colorIndex = Math.floor((PfeAvatar.colors.length * parseInt(bitPattern, 2)) / Math.pow(2, 32));\n      this.color1 = PfeAvatar.colors[this._colorIndex].color1;\n      this.color2 = PfeAvatar.colors[this._colorIndex].color2;\n\n      this._clear();\n      this._drawBackground();\n      if (this.pattern === PfeAvatar.patterns.squares) {\n        this._drawSquarePattern(arrPattern);\n      } else if (this.pattern === PfeAvatar.patterns.triangles) {\n        this._drawTrianglePattern(arrPattern);\n      }\n      // this._drawGradient();\n    }\n  }\n\n  _clear() {\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n  }\n\n  _drawBackground() {\n    this._ctx.fillStyle = this.color1;\n    this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n  }\n\n  _drawSquarePattern(pattern) {\n    this._ctx.fillStyle = this.color2;\n    if (this._ctx) {\n      let i = pattern.length;\n      while (i--) {\n        if (pattern[i]) {\n          this._drawMirroredSquare(i % 4, Math.floor(i / 4));\n        }\n      }\n    }\n  }\n\n  /**\n   * Draw a square at the given position, mirrored onto both the left and right half of the canvas.\n   */\n  _drawMirroredSquare(x, y) {\n    if (this._ctx) {\n      this._drawSquare(x, y);\n      this._drawSquare(7 - x, y);\n    }\n  }\n\n  _drawSquare(x, y) {\n    this._ctx.fillRect(this._squareSize * x, this._squareSize * y, this._squareSize, this._squareSize);\n  }\n\n  _drawTrianglePattern(pattern) {\n    this._ctx.fillStyle = this.color2;\n    if (this._ctx) {\n      let i = pattern.length;\n      while (i--) {\n        if (pattern[i]) {\n          const x = Math.floor(i / 2) % 2;\n          const y = Math.floor(i / 4);\n          const alt = i % 4;\n\n          const p1 = [x, y];\n          const p2 = [x, y];\n          const p3 = [x, y];\n\n          switch (alt) {\n            case 0:\n              p2[1]++;\n              p3[0]++;\n              p3[1]++;\n              break;\n            case 1:\n              p2[0]++;\n              p3[0]++;\n              p3[1]++;\n              break;\n            case 2:\n              p2[0]++;\n              p3[1]++;\n              break;\n            case 3:\n              p1[0]++;\n              p2[0]++;\n              p2[1]++;\n              p3[1]++;\n              break;\n          }\n\n          this._drawMirroredTriangle(p1, p2, p3);\n        }\n      }\n    }\n  }\n\n  /**\n   * Draw a square at the given position in the top-left quadrant of the\n   * canvas, and mirrored to the other three quadrants.\n   */\n  _drawMirroredTriangle(p1, p2, p3) {\n    if (this._ctx) {\n      this._drawTriangle(p1, p2, p3);\n      this._drawTriangle([4 - p1[0], p1[1]], [4 - p2[0], p2[1]], [4 - p3[0], p3[1]]);\n    }\n  }\n\n  _drawTriangle(p1, p2, p3) {\n    this._ctx.beginPath();\n    this._ctx.moveTo(...p1.map((c) => c * this._triangleSize));\n    this._ctx.lineTo(...p2.map((c) => c * this._triangleSize));\n    this._ctx.lineTo(...p3.map((c) => c * this._triangleSize));\n    this._ctx.closePath();\n    this._ctx.fill();\n    this._ctx.fill();\n  }\n\n  _drawGradient() {\n    const gradient = this._ctx.createLinearGradient(0, this._canvas.height, this._canvas.width, 0);\n    const color = this.color2;\n    let gradientColor1 = color;\n    let gradientColor2 = color;\n    if (/^#[A-f0-9]{3}$/.test(color)) {\n      // color is of the form \"#fff\"\n      gradientColor1 += \"c\";\n      gradientColor2 += \"0\";\n    } else if (/^#[A-f0-9]{6}$/.test(color)) {\n      // color is of the form \"#ffffff\"\n      gradientColor1 += \"cc\";\n      gradientColor2 += \"00\";\n    }\n    gradient.addColorStop(0, gradientColor1);\n    gradient.addColorStop(1, gradientColor2);\n    gradient.addColorStop(1, gradientColor1);\n    this._ctx.fillStyle = gradient;\n    this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n  }\n}\n\nPfeAvatar._registerColors();\n\nPFElement.create(PfeAvatar);\n\nexport default PfeAvatar;\n"],
  "mappings": "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",
  "names": []
}
