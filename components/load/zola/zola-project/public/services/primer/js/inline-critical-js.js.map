{
  "version": 3,
  "sources": ["../../../../src/window.portal.ts", "../../../../src/auto-login.ts", "../../../../src/inline-critical-js.ts", "../../../../src/primer-ready.ts", "../../../../src/primer-network.ts"],
  "sourcesContent": ["import * as Primer from \"./primer\";\n\ninterface WindowDotPortal {\n  /**\n   * The URL to the Customer Portal host from which this Primer HTML was fetched.\n   * @example \"https://access.qa.redhat.com\"\n   */\n  host: string;\n\n  /**\n   * The URL to the Red Hat SSO server that should be used in this environment.\n   * @example \"https://sso.qa.redhat.com\"\n   */\n  idp_url: string;\n\n  /**\n   * The code for the currently active locale.\n   * @example one of: \"en\", \"fr\", \"ja\", \"ko\", \"zh_CN\"\n   */\n  lang: string;\n\n  /**\n   * The version of the Primer package that's currently deployed.\n   * @example \"1.0.0\"\n   */\n  version: string;\n\n  /**\n   * A timestamp indicating when this build of Primer took place.\n   * @example \"Thu Jun 03 2021 15:10:19 GMT-0400 (Eastern Daylight Time)\"\n   */\n  builddate: string;\n\n  /**\n   * A timestamp for when the Primer HTML was deployed.\n   *\n   * Local to the Apache server serving the HTML response.  Resolved by Apache SSI.\n   *\n   * @example \"Thu, 03 Jun 2021 15:08:52 EDT-0400\"\n   */\n  deploydate: string;\n\n  /**\n   * A timestamp for when the Primer HTML was fetched.\n   *\n   * Local to the Apache server serving the HTML response.  Resolved by Apache SSI.\n   *\n   * @example \"Thu, 03 Jun 2021 15:08:52 EDT-0400\"\n   */\n  fetchdate: string;\n\n  /**\n   * A reference to the main Primer JS module.\n   *\n   * @example `window.primer.pfe.include(\"pfe-cta\")`\n   */\n  primer: typeof Primer;\n}\n\ndeclare global {\n  // add types for window.portal\n  interface Window {\n    portal: WindowDotPortal;\n  }\n}\n", "// Auto-login\nimport \"./window.portal\";\n\n/**\n * Detect if the user has an existing session on sso.redhat.com.  If so, bounce\n * the user to sso.redhat.com to get an auth token for the Customer Portal.\n *\n * NOTE: This works by checking for the existence of the rh_sso_session cookie\n * which is owned by sso.redhat.com and scoped to *.redhat.com.  As a result,\n * having a session in any environment will be detected by this function as\n * having a session in all environments.  If you are being bounced to login\n * unexpectedly, that is why.  Users in production will never be challenged for\n * credentials by this bounce (provided the rh_sso_session cookie's lifespan is\n * perfectly aligned with the actual user\n * session).\n */\nexport function loginIfSessionExists(): void {\n  const notOnLogoutPage = !/\\/logout.*/.test(location.pathname);\n  const onPortalHost = window.portal.host === location.origin;\n  const hasSession = document.cookie.indexOf(\"rh_sso_session\") >= 0;\n  const hasNoJWT = !(document.cookie.indexOf(\"rh_jwt\") >= 0);\n\n  if (notOnLogoutPage && onPortalHost && hasSession && hasNoJWT) {\n    const currentPage = encodeURIComponent(window.location.href);\n    window.location.assign(`/login?redirectTo=${currentPage}`);\n  }\n}\n", "import { onReady } from \"./primer-ready\";\nimport * as network from \"./primer-network\";\nimport \"./window.portal\";\n\nwindow.portal.primer.onReady = onReady;\n\n// only if we're building for online mode, import auto-login and bounce the\n// user through SSO if we detect that they already have a session\nif (network.online) {\n  import(\"./auto-login\").then(({ loginIfSessionExists }) => {\n    loginIfSessionExists();\n  });\n}\n\n// Set a lang attribute on the html element to make sure it isn't \"unknown\"\ndocument.documentElement.setAttribute(\"lang\", document.documentElement.getAttribute(\"lang\") || window.portal.lang || \"en\");", "import \"./window.portal\";\n\nconst globalEventName = \"cp_primer_global_ready\";\n\nlet isReady: boolean = false;\n\ntype PrimerModule = typeof window.portal.primer;\n\ntype OnReadyFunction = (primer: typeof window.portal.primer) => void;\n\n/**\n * Register a callback to be run when Primer is ready. The callback will be run\n * when Primer is initialized. If Primer is already initialized, the callback\n * will be run immediately.\n *\n * Primer being initialized does not mean all sub-modules are initialized.  For\n * example, `session` has its own `onInit` function that must be used before .\n *\n * @example `window.portal.primer.onReady().then( primer => primer.pfe.include(\"pfe-card\") )`\n */\nexport function onReady(): Promise<PrimerModule> {\n  return new Promise((resolve) => {\n    if (isReady) {\n      resolve(window.portal.primer);\n    } else {\n      window.addEventListener(globalEventName, () => {\n        resolve(window.portal.primer);\n      });\n    }\n  });\n}\n\n/**\n * Dispatch the ready event to indicate that the Primer module is ready to be referenced.\n */\nexport function dispatchReadyEvent(): void {\n  isReady = true;\n\n  // trigger an event to indicate that window.portal.primer is ready\n  // this is primarily used for module interop, since ES5-era module systems\n  // (CJS, AMD, IIFE, globals, all of 'em) can't import Primer's ES module,\n  // but they can listen for an event.\n  window.dispatchEvent(\n    new CustomEvent(globalEventName, {\n      bubbles: false, // this event only occurs on window\n    })\n  );\n}\n", "/**\n * A variable injected at build-time that indicates offline mode.  If true, Primer is being build with NO support for remote network requests.\n * @see Primer's esbuild options, `define` specifically\n */\ndeclare const PRIMER_OFFLINE: boolean;\n\n/**\n * A variable injected at build-time that indicates online mode.  If true, Primer is being build with support for remote network requests.\n * @see Primer's esbuild options, `define` specifically\n */\ndeclare const PRIMER_ONLINE: boolean;\n\n/** Is Primer being built for online use. */\nexport let online = PRIMER_ONLINE;\n/** Is Primer being built for offline use (project Mimir). */\nexport let offline = PRIMER_OFFLINE;\n"],
  "mappings": "wLAAA,mBCAA,2CAgBO,YAAsC,CAC3C,GAAM,GAAkB,CAAC,aAAa,KAAK,SAAS,UAC9C,EAAe,OAAO,OAAO,OAAS,SAAS,OAC/C,EAAa,SAAS,OAAO,QAAQ,mBAAqB,EAC1D,EAAW,CAAE,UAAS,OAAO,QAAQ,WAAa,GAExD,GAAI,GAAmB,GAAgB,GAAc,EAAU,CAC7D,GAAM,GAAc,mBAAmB,OAAO,SAAS,MACvD,OAAO,SAAS,OAAO,qBAAqB,MAxBhD,iBACA,MCDA,ICAA,QAEA,GAAM,GAAkB,yBAEpB,EAAmB,GAgBhB,YAA0C,CAC/C,MAAO,IAAI,SAAQ,AAAC,GAAY,CAC9B,AAAI,EACF,EAAQ,OAAO,OAAO,QAEtB,OAAO,iBAAiB,EAAiB,IAAM,CAC7C,EAAQ,OAAO,OAAO,YC1B9B,IAaO,GAAI,GAAS,UFXpB,IAEA,OAAO,OAAO,OAAO,QAAU,EAI/B,AAAY,GACV,oCAAuB,KAAK,CAAC,CAAE,0BAA2B,CACxD,MAKJ,SAAS,gBAAgB,aAAa,OAAQ,SAAS,gBAAgB,aAAa,SAAW,OAAO,OAAO,MAAQ",
  "names": []
}
